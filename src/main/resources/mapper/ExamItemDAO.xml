<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.onlineexam.dao.ExamItemDAO">
  <resultMap id="BaseResultMap" type="com.sen.onlineexam.pojo.ExamItem">
    <id column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_score" jdbcType="INTEGER" property="itemScore" />
    <result column="exam_id" javaType="INTEGER" property="examId"/>
    <association property="problem" javaType="com.sen.onlineexam.pojo.Problem" column="problem_id"
                 select="com.sen.onlineexam.dao.ProblemDAO.selectByPrimaryKey"/>
  </resultMap>

  <sql id="Base_Column_List">
    item_id, item_score, problem_id, exam_id
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oe_exam_item
    where item_id = #{itemId,jdbcType=INTEGER}
  </select>

  <select id="selectByExamId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from oe_exam_item
    where
    exam_id = #{examId,jdbcType=INTEGER}
  </select>

  <select id="selectByExamIdAndProblemId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from oe_exam_item
    where exam_id = #{examId,jdbcType=INTEGER} and problem_id = #{problemId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByExamId" parameterType="java.lang.Integer">
    delete from oe_exam_item
    where exam_id = #{examId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteExamItem" parameterType="java.util.List">
    delete from oe_exam_item
    where item_id in
    <foreach collection="list" index="index" separator="," item="item" open="(" close=")">
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>

  <insert id="insert" keyColumn="item_id" keyProperty="itemId" parameterType="com.sen.onlineexam.pojo.ExamItem" useGeneratedKeys="true">
    insert into oe_exam_item (item_score, problem_id, exam_id)
    values
    <foreach collection="list" index="index" separator="," item="item">
    (#{item.itemScore,jdbcType=INTEGER}, #{item.problem.problemId,jdbcType=INTEGER}, #{item.examId,jdbcType=INTEGER})
    </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.sen.onlineexam.pojo.ExamItem">
    update oe_exam_item
    <set>
      <if test="itemScore != null">
        item_score = #{itemScore,jdbcType=INTEGER},
      </if>
      <if test="problem != null and problem.problemId != null">
        problem_id = #{problem.problemId,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=INTEGER},
      </if>
    </set>
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.sen.onlineexam.pojo.ExamItem">
    update oe_exam_item
    set item_score = #{itemScore,jdbcType=INTEGER},
      problem_id = #{problem.problemId,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=INTEGER}
    where item_id = #{itemId,jdbcType=INTEGER}
  </update>
</mapper>